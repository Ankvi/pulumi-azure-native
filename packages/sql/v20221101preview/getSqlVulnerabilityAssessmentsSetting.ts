import * as pulumi from "@pulumi/pulumi";
import * as utilities from "@kengachu-pulumi/azure-native-core/utilities";
import * as types from "./types";
/**
 * Gets SQL Vulnerability Assessment policy.
 */
export function getSqlVulnerabilityAssessmentsSetting(args: GetSqlVulnerabilityAssessmentsSettingArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlVulnerabilityAssessmentsSettingResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:sql/v20221101preview:getSqlVulnerabilityAssessmentsSetting", {
        "resourceGroupName": args.resourceGroupName,
        "serverName": args.serverName,
        "vulnerabilityAssessmentName": args.vulnerabilityAssessmentName,
    }, opts);
}

export interface GetSqlVulnerabilityAssessmentsSettingArgs {
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: string;
    /**
     * The name of the server.
     */
    serverName: string;
    /**
     * The name of the SQL Vulnerability Assessment.
     */
    vulnerabilityAssessmentName: string;
}

/**
 * A SQL Vulnerability Assessment.
 */
export interface GetSqlVulnerabilityAssessmentsSettingResult {
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * Specifies the state of the SQL Vulnerability Assessment, whether it is enabled or disabled or a state has not been applied yet on the specific database or server.
     */
    readonly state?: string;
    /**
     * SystemData of SqlVulnerabilityAssessmentResource.
     */
    readonly systemData: types.outputs.SystemDataResponse;
    /**
     * Resource type.
     */
    readonly type: string;
}
/**
 * Gets SQL Vulnerability Assessment policy.
 */
export function getSqlVulnerabilityAssessmentsSettingOutput(args: GetSqlVulnerabilityAssessmentsSettingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSqlVulnerabilityAssessmentsSettingResult> {
    return pulumi.output(args).apply((a: any) => getSqlVulnerabilityAssessmentsSetting(a, opts))
}

export interface GetSqlVulnerabilityAssessmentsSettingOutputArgs {
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the server.
     */
    serverName: pulumi.Input<string>;
    /**
     * The name of the SQL Vulnerability Assessment.
     */
    vulnerabilityAssessmentName: pulumi.Input<string>;
}
