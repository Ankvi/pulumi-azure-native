import * as pulumi from "@pulumi/pulumi";
import * as utilities from "@kengachu-pulumi/azure-native-core/utilities";
import * as types from "./types";
/**
 * Gets the managed instance's vulnerability assessment.
 */
export function getManagedInstanceVulnerabilityAssessment(args: GetManagedInstanceVulnerabilityAssessmentArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedInstanceVulnerabilityAssessmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:sql/v20230501preview:getManagedInstanceVulnerabilityAssessment", {
        "managedInstanceName": args.managedInstanceName,
        "resourceGroupName": args.resourceGroupName,
        "vulnerabilityAssessmentName": args.vulnerabilityAssessmentName,
    }, opts);
}

export interface GetManagedInstanceVulnerabilityAssessmentArgs {
    /**
     * The name of the managed instance for which the vulnerability assessment is defined.
     */
    managedInstanceName: string;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: string;
    /**
     * The name of the vulnerability assessment.
     */
    vulnerabilityAssessmentName: string;
}

/**
 * A managed instance vulnerability assessment.
 */
export interface GetManagedInstanceVulnerabilityAssessmentResult {
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * The recurring scans settings
     */
    readonly recurringScans?: types.outputs.VulnerabilityAssessmentRecurringScansPropertiesResponse;
    /**
     * Resource type.
     */
    readonly type: string;
}
/**
 * Gets the managed instance's vulnerability assessment.
 */
export function getManagedInstanceVulnerabilityAssessmentOutput(args: GetManagedInstanceVulnerabilityAssessmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedInstanceVulnerabilityAssessmentResult> {
    return pulumi.output(args).apply((a: any) => getManagedInstanceVulnerabilityAssessment(a, opts))
}

export interface GetManagedInstanceVulnerabilityAssessmentOutputArgs {
    /**
     * The name of the managed instance for which the vulnerability assessment is defined.
     */
    managedInstanceName: pulumi.Input<string>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the vulnerability assessment.
     */
    vulnerabilityAssessmentName: pulumi.Input<string>;
}