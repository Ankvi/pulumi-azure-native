import * as pulumi from "@pulumi/pulumi";
import * as utilities from "@kengachu-pulumi/azure-native-core/utilities";
import * as types from "../types";
/**
 * Gets the database's vulnerability assessment.
 */
export function getDatabaseVulnerabilityAssessment(args: GetDatabaseVulnerabilityAssessmentArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseVulnerabilityAssessmentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure-native:sql/v20230201preview:getDatabaseVulnerabilityAssessment", {
        "databaseName": args.databaseName,
        "resourceGroupName": args.resourceGroupName,
        "serverName": args.serverName,
        "vulnerabilityAssessmentName": args.vulnerabilityAssessmentName,
    }, opts);
}

export interface GetDatabaseVulnerabilityAssessmentArgs {
    /**
     * The name of the database for which the vulnerability assessment is defined.
     */
    databaseName: string;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: string;
    /**
     * The name of the server.
     */
    serverName: string;
    /**
     * The name of the vulnerability assessment.
     */
    vulnerabilityAssessmentName: string;
}

/**
 * A database vulnerability assessment.
 */
export interface GetDatabaseVulnerabilityAssessmentResult {
    /**
     * Resource ID.
     */
    readonly id: string;
    /**
     * Resource name.
     */
    readonly name: string;
    /**
     * The recurring scans settings
     */
    readonly recurringScans?: types.outputs.sql.v20230201preview.VulnerabilityAssessmentRecurringScansPropertiesResponse;
    /**
     * Resource type.
     */
    readonly type: string;
}
/**
 * Gets the database's vulnerability assessment.
 */
export function getDatabaseVulnerabilityAssessmentOutput(args: GetDatabaseVulnerabilityAssessmentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatabaseVulnerabilityAssessmentResult> {
    return pulumi.output(args).apply((a: any) => getDatabaseVulnerabilityAssessment(a, opts))
}

export interface GetDatabaseVulnerabilityAssessmentOutputArgs {
    /**
     * The name of the database for which the vulnerability assessment is defined.
     */
    databaseName: pulumi.Input<string>;
    /**
     * The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the server.
     */
    serverName: pulumi.Input<string>;
    /**
     * The name of the vulnerability assessment.
     */
    vulnerabilityAssessmentName: pulumi.Input<string>;
}
