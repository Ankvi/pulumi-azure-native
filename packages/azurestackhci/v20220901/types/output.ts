import * as enums from "./enums";
import * as pulumi from "@pulumi/pulumi";
    /**
     * Desired properties of the cluster.
     */
    export interface ClusterDesiredPropertiesResponse {
        /**
         * Desired level of diagnostic data emitted by the cluster.
         */
        diagnosticLevel?: string;
        /**
         * Desired state of Windows Server Subscription.
         */
        windowsServerSubscription?: string;
    }

    /**
     * Cluster node details.
     */
    export interface ClusterNodeResponse {
        /**
         * Number of physical cores on the cluster node.
         */
        coreCount: number;
        /**
         * Id of the node in the cluster.
         */
        id: number;
        /**
         * Manufacturer of the cluster node hardware.
         */
        manufacturer: string;
        /**
         * Total available memory on the cluster node (in GiB).
         */
        memoryInGiB: number;
        /**
         * Model name of the cluster node hardware.
         */
        model: string;
        /**
         * Name of the cluster node.
         */
        name: string;
        /**
         * Type of the cluster node hardware.
         */
        nodeType: string;
        /**
         * Display version of the operating system running on the cluster node.
         */
        osDisplayVersion: string;
        /**
         * Operating system running on the cluster node.
         */
        osName: string;
        /**
         * Version of the operating system running on the cluster node.
         */
        osVersion: string;
        /**
         * Immutable id of the cluster node.
         */
        serialNumber: string;
        /**
         * State of Windows Server Subscription.
         */
        windowsServerSubscription: string;
    }

    /**
     * Properties reported by cluster agent.
     */
    export interface ClusterReportedPropertiesResponse {
        /**
         * Unique id generated by the on-prem cluster.
         */
        clusterId: string;
        /**
         * Name of the on-prem cluster connected to this resource.
         */
        clusterName: string;
        /**
         * Version of the cluster software.
         */
        clusterVersion: string;
        /**
         * Level of diagnostic data emitted by the cluster.
         */
        diagnosticLevel?: string;
        /**
         * IMDS attestation status of the cluster.
         */
        imdsAttestation: string;
        /**
         * Last time the cluster reported the data.
         */
        lastUpdated: string;
        /**
         * List of nodes reported by the cluster.
         */
        nodes: ClusterNodeResponse[];
    }

    /**
     * Software Assurance properties of the cluster.
     */
    export interface SoftwareAssurancePropertiesResponse {
        /**
         * TimeStamp denoting the latest SA benefit applicability is validated.
         */
        lastUpdated: string;
        /**
         * Customer Intent for Software Assurance Benefit.
         */
        softwareAssuranceIntent?: string;
        /**
         * Status of the Software Assurance for the cluster.
         */
        softwareAssuranceStatus?: string;
    }
